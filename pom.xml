<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>net.atos.ojas</groupId>
  <artifactId>ldap-jwt</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.java.version>1.8</project.java.version>
    <!-- maven Plug-in versions -->
    <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>
    <fabric8.mdp.version>0.26.1</fabric8.mdp.version>
    <!-- core Fuse versions -->
    <fuse.version>7.0.0.fuse-000027-redhat-1</fuse.version>
    <fabric8.version>3.0.11.fuse-000039-redhat-1</fabric8.version>
    <camel.version>2.21.0.fuse-000077-redhat-1</camel.version>
    <!-- core Spring Boot versions -->
    <!--same version as in parent POM: version.org.springframework.boot.spring-boot-->
    <spring-boot.version>1.5.12.RELEASE</spring-boot.version>
    <!-- core Arquillian versions -->
    <arquillian.universe.version>1.2.0.1</arquillian.universe.version>
    <arquillian.cube.version>1.17.1</arquillian.cube.version>
    <arquillian.core.version>1.4.0.Final</arquillian.core.version>
    <shrinkwrap.core.version>1.2.6</shrinkwrap.core.version>
    <!-- core Docker Java version -->
    <docker.java.version>3.0.14</docker.java.version>
    <!-- other versions -->
    <junit.version>4.12</junit.version>
    <jackson.version>2.9.6</jackson.version>
    <jacoco.version>0.7.9</jacoco.version>
    <restassured.version>3.1.0</restassured.version>
    <!-- API specific properties -->
    <joda.time.version>2.10</joda.time.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jboss.redhat-fuse</groupId>
        <artifactId>redhat-fuse</artifactId>
        <version>${fuse.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>${spring-boot.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-bom</artifactId>
        <version>${camel.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <!--
      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>${arquillian.core.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      -->
      <dependency>
        <groupId>org.arquillian.cube</groupId>
        <artifactId>arquillian-cube-bom</artifactId>
        <version>${arquillian.cube.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-undertow</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-servlet-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-undertow-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-http4-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-ldap</artifactId>
    </dependency>
    <!--
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-jackson-starter</artifactId>
    </dependency>
    -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-swagger-java-starter</artifactId>
      <exclusions>
        <exclusion>
          <groupId>javax.ws.rs</groupId>
          <artifactId>jsr311-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>javax.ws.rs-api</artifactId>
      <version>2.0.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.4</version>
    </dependency>
    <dependency>
        <groupId>com.auth0</groupId>
        <artifactId>java-jwt</artifactId>
        <version>3.11.0</version>
    </dependency>
    

    <!-- API Specific Libs -->

    <!-- Testing -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-test-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${restassured.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.3</version>
    </dependency>
    <!-- Arquillian Framework -->
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-standalone</artifactId>
      <version>${arquillian.core.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.arquillian.cube</groupId>
      <artifactId>arquillian-cube-docker-junit-rule</artifactId>
      <!--<version>${arquillian.cube.version}</version>-->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.arquillian.cube</groupId>
      <artifactId>arquillian-cube-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.arquillian.cube</groupId>
      <artifactId>arquillian-cube-docker</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.jboss.arquillian.test</groupId>
          <artifactId>arquillian-test-spi</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.arquillian.cube</groupId>
      <artifactId>arquillian-cube-docker-restassured</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${project.java.version}</source>
            <target>${project.java.version}</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>${fabric8.mdp.version}</version>
          <configuration>
            <sourceDirectory>.</sourceDirectory>
            <!-- Standard d-m-p configuration which defines how images are build, i.e. how the docker.tar is created -->
            <images>
              <image>
                <name>${project.artifactId}:${project.version}</name>
                <!-- "alias" is used to correlate to the containers in the pod spec -->
                <alias>api</alias>
                <build>
                  <dockerFile>Dockerfile</dockerFile>
                </build>
              </image>
            </images>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.camel</groupId>
          <artifactId>camel-maven-plugin</artifactId>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <!-- The default profile skips all tests, though you can tune it to run just unit tests based on a custom pattern -->
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>unit-test</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <!--  Force Jersey to be used when RestEasy is auto-discovered. Jersey is required by docker-java -->
                <javax.ws.rs.ext.RuntimeDelegate>org.glassfish.jersey.internal.RuntimeDelegateImpl
                </javax.ws.rs.ext.RuntimeDelegate>
              </systemPropertyVariables>
              <includes>
                <include>**/*UnitTest.java</include>
              </includes>
              <trimStackTrace>false</trimStackTrace>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <configuration>
              <append>true</append>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <excludes>
                    <exclude>**/*FileHelper.*</exclude>
                    <exclude>**/*FileHelper$*.*</exclude>
                    <exclude>**/*ConfigurationHelper.*</exclude>
                    <exclude>**/*ConfigurationHelper$*.*</exclude>
                  </excludes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>test</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <!--  Force Jersey to be used when RestEasy is auto-discovered. Jersey is required by docker-java -->
                <javax.ws.rs.ext.RuntimeDelegate>org.glassfish.jersey.internal.RuntimeDelegateImpl
                </javax.ws.rs.ext.RuntimeDelegate>
              </systemPropertyVariables>
              <includes>
                <include>**/*IntegrationTest.java</include>
              </includes>
              <trimStackTrace>false</trimStackTrace>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>org.jboss.shrinkwrap</groupId>
          <artifactId>shrinkwrap-api</artifactId>
          <version>${shrinkwrap.core.version}</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>com-test</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <!--  Force Jersey to be used when RestEasy is auto-discovered. Jersey is required by docker-java -->
                <javax.ws.rs.ext.RuntimeDelegate>org.glassfish.jersey.internal.RuntimeDelegateImpl
                </javax.ws.rs.ext.RuntimeDelegate>
                <auto.start.containers>[none]</auto.start.containers>
              </systemPropertyVariables>
              <includes>
                <include>**/*ContainerObjectTest.java</include>
              </includes>
              <trimStackTrace>false</trimStackTrace>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <!--
            we need this to fix an issue with Docker Java
            and Docker versions. Docker Java relies on
            text strings returned from the Docker API;
            these change between Docker versions.
        -->
        <dependency>
          <groupId>com.github.docker-java</groupId>
          <artifactId>docker-java</artifactId>
          <version>${docker.java.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
          <version>2.9.6</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.shrinkwrap</groupId>
          <artifactId>shrinkwrap-api</artifactId>
          <version>${shrinkwrap.core.version}</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

  <pluginRepositories>
    <pluginRepository>
      <id>redhat-ga</id>
      <name>redhat-ga</name>
      <url>https://maven.repository.redhat.com/ga</url>
    </pluginRepository>
    <pluginRepository>
      <id>redhat-EA</id>
      <name>redhat-EA</name>
      <url>https://maven.repository.redhat.com/earlyaccess/all</url>
    </pluginRepository>
    <pluginRepository>
      <releases>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>Central Repository</name>
      <url>https://repo.maven.apache.org/maven2</url>
    </pluginRepository>
  </pluginRepositories>
  <!-- Repositories -->
  <repositories>
    <repository>
      <id>central</id>
      <name>Central Repository</name>
      <url>https://repo.maven.apache.org/maven2</url>
    </repository>
    <repository>
      <id>redhat-ga</id>
      <name>redhat-ga</name>
      <url>https://maven.repository.redhat.com/ga</url>
    </repository>
    <repository>
      <id>jboss-public-repository</id>
      <url>http://repository.jboss.org/nexus/content/groups/public/</url>
    </repository>
  </repositories>

</project>
